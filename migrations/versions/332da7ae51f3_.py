"""empty message

Revision ID: 332da7ae51f3
Revises: 2a9ca56929cc
Create Date: 2018-08-17 14:00:12.873946

"""

# revision identifiers, used by Alembic.
revision = '332da7ae51f3'
down_revision = '2a9ca56929cc'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa


def upgrade(engine_name):
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name):
    globals()["downgrade_%s" % engine_name]()





def upgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    pass
    ### end Alembic commands ###


def downgrade_():
    ### commands auto generated by Alembic - please adjust! ###
    pass
    ### end Alembic commands ###


def upgrade_stats():
    ### commands auto generated by Alembic - please adjust! ###
    import os
    if os.environ.get("SPLICE_IGNORE_REDSHIFT", "") == "true":
        return
    op.create_table('watchdog_proxy_events_daily',
    sa.Column('receive_at', sa.DateTime(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('event', sa.String(length=64), nullable=False),
    sa.Column('consumer_name', sa.String(length=128), nullable=True),
    sa.Column('watchdog_id', sa.String(length=128), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('poller_id', sa.String(length=128), nullable=True),
    sa.Column('items_in_queue', sa.Integer(), nullable=True),
    sa.Column('items_in_progress', sa.Integer(), nullable=True),
    sa.Column('items_in_waiting', sa.Integer(), nullable=True),
    sa.Column('photodna_tracking_id', sa.String(length=128), nullable=True),
    sa.Column('worker_id', sa.String(length=128), nullable=True),
    sa.Column('is_match', sa.Boolean(), nullable=True),
    sa.Column('is_error', sa.Boolean(), nullable=True),
    sa.Column('timing_sent', sa.Integer(), nullable=True),
    sa.Column('timing_received', sa.Integer(), nullable=True),
    sa.Column('timing_submitted', sa.Integer(), nullable=True)
    )
    ### end Alembic commands ###


def downgrade_stats():
    ### commands auto generated by Alembic - please adjust! ###
    import os
    if os.environ.get("SPLICE_IGNORE_REDSHIFT", "") == "true":
        return
    op.drop_table('watchdog_proxy_events_daily')
    ### end Alembic commands ###

